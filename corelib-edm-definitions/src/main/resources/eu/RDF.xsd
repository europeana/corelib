<?xml version="1.0" encoding="UTF-8"?>
<schema xmlns="http://www.w3.org/2001/XMLSchema" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
	xmlns:xml="http://www.w3.org/XML/1998/namespace" xmlns:sch="http://purl.oclc.org/dsdl/schematron"
	targetNamespace="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
	elementFormDefault="qualified">
	<annotation>
		<documentation>
			EDM First Implementation Schema: RDF resources and
			literals
		</documentation>
	</annotation>

	<import namespace="http://www.w3.org/XML/1998/namespace"
		schemaLocation="xml.xsd" />

	<element name="type" type="rdf:ResourceType">

		<annotation>
			<documentation>
				To indicate the type of a resource. Currently not used
			</documentation>
		</annotation>
	</element>
	<complexType name="ResourceType">
		<annotation>
			<appinfo>
				<sch:pattern>
					<sch:rule context="*">
						<sch:assert test="not(@rdf:resource = '')">
							Empty rdf:resource attribute is not allowed for
							<sch:name />
							element.
						</sch:assert>
					</sch:rule>
				</sch:pattern>
			</appinfo>
		</annotation>
		<attribute ref="rdf:resource" use="required" />
	</complexType>

	<complexType name="DateType">
		<simpleContent>
			<extension base="date">
				<attribute ref="rdf:datatype" use="required"
					fixed="http://www.w3.org/2001/XMLSchema#date" />
			</extension>
		</simpleContent>
	</complexType>
	<complexType name="LongType">
		<simpleContent>
			<extension base="long">
				<attribute ref="rdf:datatype" use="required" fixed="http://www.w3.org/2001/XMLSchema#long"/>
			</extension>
		</simpleContent>
	</complexType>
	<complexType name="IntegerType">
        <simpleContent>
            <extension base="long">
                <attribute ref="rdf:datatype" use="required" fixed="http://www.w3.org/2001/XMLSchema#integer"/>
            </extension>
        </simpleContent>
    </complexType>
    <complexType name="NonNegativeIntegerType">
        <simpleContent>
            <extension base="nonNegativeInteger">
                <attribute ref="rdf:datatype" use="required" fixed="http://www.w3.org/2001/XMLSchema#nonNegativeInteger"/>
            </extension>
        </simpleContent>
    </complexType>
    <complexType name="DoubleType">
        <simpleContent>
            <extension base="double">
                <attribute ref="rdf:datatype" use="required" fixed="http://www.w3.org/2001/XMLSchema#double"/>
            </extension>
        </simpleContent>
    </complexType>
    <complexType name="StringType">
        <simpleContent>
            <extension base="string">
                <attribute ref="rdf:datatype" use="required" fixed="http://www.w3.org/2001/XMLSchema#string"/>
            </extension>
        </simpleContent>
    </complexType>
	<!-- Because of jibx incompatibility in the generation og the HexBinarytype (byte array) that leads to Marshalling issues this needs to be maintained as String
	For as long as Jibx does not properly support it
	-->
    <complexType name="HexBinaryType">
        <simpleContent>
            <extension base="rdf:hexBinaryString">
                <attribute ref="rdf:datatype" use="required" fixed="http://www.w3.org/2001/XMLSchema#hexBinary"/>
            </extension>
        </simpleContent>
    </complexType>

	<simpleType name="hexBinaryString">
		<restriction base="string">
			<pattern value="[0-9A-Fa-f]{6}"/>
		</restriction>
	</simpleType>
	<complexType name="AboutType">
		<annotation>
			<appinfo>
				<sch:pattern>
					<sch:rule context="*">
						<sch:assert test="not(@rdf:about = '')">
							Empty rdf:about attribute is not allowed for
							<sch:name />
							element.
						</sch:assert>
					</sch:rule>
				</sch:pattern>
			</appinfo>
		</annotation>
		<attribute ref="rdf:about" use="required" />
	</complexType>

	<complexType name="LiteralType">
		<annotation>
			<appinfo>
				<sch:pattern>
					<sch:rule context="*">
						<sch:assert test="not(@xml:lang = '')">
							Empty xml:lang attribute is not allowed for
							<sch:name />
							element.
						</sch:assert>
					</sch:rule>
				</sch:pattern>
			</appinfo>
		</annotation>
		<simpleContent>
			<extension base="string">
				<attribute ref="xml:lang" use="optional" />
			</extension>
		</simpleContent>
	</complexType>

	<attribute name="resource">
		<simpleType>
			<restriction base="anyURI" />
		</simpleType>
	</attribute>

	<attribute name="about">
		<simpleType>
			<restriction base="anyURI" />
		</simpleType>
	</attribute>

	<attribute name="datatype">
		<simpleType>
			<restriction base="anyURI" />
		</simpleType>
	</attribute>

	<complexType name="ResourceOrLiteralType">
		<annotation>
			<appinfo>
				<sch:pattern>
					<sch:rule context="*">
						<sch:assert test="not(@rdf:resource and text())">
							Element
							<sch:name />
							should not have both rdf:resource attribute and text value
							populated.
						</sch:assert>
					</sch:rule>
				</sch:pattern>
			</appinfo>
		</annotation>
		<simpleContent>
			<extension base="string">
				<attribute ref="xml:lang" use="optional" />
				<attribute ref="rdf:resource" use="optional" />
			</extension>
		</simpleContent>
	</complexType>
</schema>