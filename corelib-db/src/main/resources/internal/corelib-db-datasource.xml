<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx.xsd
	">

    <!-- When deploying on Cloud Foundry this dataSource is ignored because when there is 1 database service defined in
         the manifest the Spring Auto-reconfiguration framework will create it's own dataSource for that instead. See also
         https://spring.io/blog/2011/11/04/using-cloud-foundry-services-with-spring-part-2-auto-reconfiguration
         Unfortunately Spring Auto-reconfiguration then also automatically sets maxIdle and maxActive to 4. See also
         https://community.pivotal.io/s/article/Connection-pool-warning-message-maxIdle-is-larger-than-maxActive-setting-maxIdle-to-4-seen-in-PCF-deployed-Spring-app -->
    <bean id="corelib_db_dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
        <property name="driverClassName" value="#{europeanaProperties['db.driverClass']}"/>
        <property name="url" value="jdbc:#{europeanaProperties['postgres.jdbcUrl']}" />
        <property name="maxIdle" value="2" />
        <property name="maxActive" value="10" />
    </bean>

    <bean id="corelib_db_mongoProvider" class="eu.europeana.corelib.storage.impl.MongoProviderImpl" destroy-method="close">
        <constructor-arg value="#{europeanaProperties['mongodb.connectionUrl']}" type="java.lang.String"/>
    </bean>

    <bean id="corelib_db_mongo_api" class="eu.europeana.corelib.db.wrapper.ApiMongoConnector"/>

    <!-- <bean id="corelib_db_morphia_datastore_oauth2" factory-bean="corelib_db_mongo_api" factory-method="createDatastore">
        <constructor-arg value="OAuth2"/>
        <constructor-arg value="#{corelib_db_mongoProvider.getMongo()}"/>
        <constructor-arg value="#{europeanaProperties['mongodb.oauth.dbname']}" type="java.lang.String"/>
    </bean> -->

    <bean id="corelib_db_entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
          p:dataSource-ref="corelib_db_dataSource">
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" p:showSql="false"
                  p:generateDdl="true" p:databasePlatform="org.hibernate.dialect.PostgreSQLDialect"/>
        </property>
    </bean>

    <bean id="corelib_db_transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
          primary="true"
          p:entityManagerFactory-ref="corelib_db_entityManagerFactory"
          p:dataSource-ref="corelib_db_dataSource"/>

    <tx:annotation-driven transaction-manager="corelib_db_transactionManager"/>

    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>


</beans>